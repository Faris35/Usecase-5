import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

st.set_page_config(page_title="ุชุญููู ุณูู ุงูุนูู: ุฃุณุฆูุฉ ูุฌุงูุจูุงูุง", layout="centered")

st.markdown(
    """
    <style>
    body{
        text-align: right; 
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.title("ุชุญููู ุณูู ุงูุนูู: ุงูุฃุณุฆูุฉ ูุงูุฅุฌุงุจุงุช")
st.write("ููุง ุจูุณุชุนุฑุถ ุงูุฃุณุฆูุฉ ุงููู ูุงุฌูุชูุง ูู ุชุญููู ุจูุงูุงุช ุงููุธุงุฆูุ ููุดูู ููู ุฌุงูุจูุง ุนูููุง")

# Load the data
df = pd.read_csv('cleaned_data.csv')

# Question 1
st.header("ุงูุณุคุงู 1๏ธโฃ: ูุง ูุณุจุฉ ุงููุธุงุฆู ููู ููุทูุฉ ูู ุงูููููุฉุ")
st.write("ุฃูู ุณุคุงู ูุงู ุนู ุชูุฒูุน ุงููุธุงุฆู ูู ูู ููุทูุฉ. ูุนูู ูุจุบู ูุนุฑู ููู ุจุงูุถุจุท ูุชุฑูุฒ ุงูุทูุจ ุนูู ุงูุชูุธูู. ุทูุน ูุนุงูุง ุฅูู ูู ุจุนุถ ุงูููุงุทู ุนูุฏูุง ูุณุจุฉ ูุจูุฑุฉ ูู ุงููุฑุตุ ุฒู ูุง ุชุดูููู ูู ุงูุฑุณู ุงูุจูุงููุ ุจูููุง ุจุนุถ ุงูููุงุทู ุงููุฑุต ูููุง ุฃูู ุดูู. ูุฐุง ูุนุทููุง ุตูุฑุฉ ุนู ุชุฑูุฒ ุงููุธุงุฆู ูู ุฃูุงูู ูุนููุฉ ุฃูุซุฑ ูู ุบูุฑูุง")

region_counts = df['region'].value_counts(normalize=True) * 100
fig = px.bar(region_counts, x=region_counts.index, y=region_counts.values, labels={'x': "ุงูููุทูุฉ", 'y': "ุงููุณุจุฉ %"})
fig.update_layout(title="ูุณุจุฉ ุงููุธุงุฆู ูู ููุงุทู ุงูููููุฉ", title_x=0.45)
st.plotly_chart(fig)

# Question 2
st.header("ุงูุณุคุงู 2๏ธโฃ: ูุณุจุฉ ุชูุฒูุน ุงูุฐููุฑ ู ุงูุฅูุงุซ ูู ุงููุธุงุฆูุ")
st.write("ุงูุณุคุงู ุงูุซุงูู ูุงู ุจุฎุตูุต ูุณุจุฉ ุงูุฐููุฑ ุฅูู ุงูุฅูุงุซ ูู ุงููุธุงุฆู. ูู ูู ุชูุถูู ูุนูู ููุฌูุณุ ููุง ุงููู ุนูุฏู ูุฑุต ูุชุณุงููุฉุ ุทูุน ูุนูุง ุฅูู ููู ุชูุงุฒู ูุณุจูุ ูููู ููุงู ููู ูุธุงุฆู ูุฎุตุตุฉ ููุฌูุณูู ูุฃุฎุฑู ููุถูุฉ ูุฌูุณ ูุนูู. ููุง ุฃุถููุง ุฑุณู ุจูุงูู ููุถุญ ุงููุณุจ ุจุดูู ุญูู ูุณูู")

gender_mapping = {'Female': 'ุฅูุงุซ', 'Male': 'ุฐููุฑ', 'Both': 'ูููููุง'}
df['gender'] = df['gender'].map(gender_mapping)

gender_counts = df['gender'].value_counts()
fig = px.pie(gender_counts, values=gender_counts.values, names=gender_counts.index, labels={'label': "ุงูุฌูุณ", 'value': "ุงููุณุจุฉ %"})
fig.update_layout(title="ุชูุฒูุน ุงูุฌูุณ ูู ุงููุธุงุฆู", title_x=0.45)
st.plotly_chart(fig)

# Question 3
st.header("ุงูุณุคุงู 3๏ธโฃ: ูุง ูุทุงู ุงูุฑูุงุชุจ ุงููุชููุน ููุฎุฑูุฌูู ุงูุฌุฏุฏุ")
st.write("ุฃูุง ุนู ุงูุฑูุงุชุจุ ูุณุคุงููุง ูุงู ุนู ุงูุฑูุงุชุจ ุงููู ูููู ูุชููุนูุง ุงูุฎุฑูุฌ ุงูุฌุฏูุฏ. ุฌุจูุง ุงูุฏุงุชุง ูุทูุนูุง ูููุง ุฑุณู ุจูุงูู ููุถุญ ุชูุฒูุน ุงูุฑูุงุชุจ. ูุงุถุญ ุฅู ุงูุฃุบูุจ ูุญุตู ุนูู ุฑุงุชุจ ูุชูุณุทุ ุจุณ ููู ุดุฑูุญุฉ ุชุณุชูู ุฑูุงุชุจ ุฃุนูู ุดูู. ูุฐุง ููู ุนุดุงู ูุนุฑู ุงูุฎุฑูุฌ ุงููู ุฏุงุฎู ุงูุณูู ูุด ูุชููุน")

fig = px.histogram(df, x='salary', nbins=30, labels={'salary': "ุงูุฑุงุชุจ"})
fig.update_layout(title="ุชูุฒูุน ุฑูุงุชุจ ุงูุฎุฑูุฌูู ุงูุฌุฏุฏ", title_x=0.45)
st.plotly_chart(fig)

# Question 4
st.header("ุงูุณุคุงู 4๏ธโฃ: ูู ุชุณุชูุฏู ุงููุธุงุฆู ุฐูู ุงูุฎุจุฑุฉ ุฃู ุงูุฎุฑูุฌูู ุงูุฌุฏุฏุ")
st.write("ุงูุฑุณู ููุถุญ ุชูุงุฒู ูู ุงููุฑุต ุจูู ุงูุฎุฑูุฌูู ุงูุฌุฏุฏ ูุฃุตุญุงุจ ุงูุฎุจุฑุฉ ุงูุจุณูุทุฉ. ููู ูุธุงุฆู ูุซูุฑุฉ ูุง ุชุชุทูุจ ุฎุจุฑุฉุ ููุฐุง ููุชุงุฒ ููุฎุฑูุฌูู ุงูุฌุฏุฏ. ูุจููุณ ุงูููุชุ ููู ูุฑุต ูุฃุตุญุงุจ ุงูุฎุจุฑุฉ ุงูุจุณูุทุฉ (ุณูุชูู ูุซูุงู). ูุนูู ุงูุณูู ููู ูุฌุงู ููุฌููุนุ ุณูุงุก ููุช ุฌุฏูุฏ ุฃู ุนูุฏู ุฎุจุฑุฉ ุจุณูุทุฉ")

experience_counts = df['exper'].value_counts()
fig = px.bar(experience_counts, x=experience_counts.index, y=experience_counts.values, labels={'x': "ูุณุชูู ุงูุฎุจุฑุฉ", 'y': "ุนุฏุฏ ุงููุธุงุฆู"})
fig.update_layout(title="ุชูุฒูุน ุงูุฎุจุฑุฉ ุงููุทููุจุฉ", title_x=0.45)
st.plotly_chart(fig)

# Question 5
st.header("ุงูุณุคุงู 5๏ธโฃ: ูุง ูู ุงููุธุงุฆู ุงูุฃูุซุฑ ุทูุจุงู ูู ุณูู ุงูุนููุ")
st.write("ูุฐุง ุงูุณุคุงู ุจูุฎูููุง ูุนุฑู ุฃูุซุฑ ุนู ููุนูุฉ ุงููุธุงุฆู ุงููู ุนูููุง ุฅูุจุงู ูุจูุฑ ููุดูู ูุด ุงููุฌุงูุงุช ุงููู ุณูู ุงูุนูู ูุทูุจูุง ุจูุซุฑุฉ")

# Calculate the most in-demand job titles
job_title_counts = df['job_title'].value_counts().head(10)  # Top 10 most frequent job titles

# Plot the chart
fig = px.bar(job_title_counts, x=job_title_counts.index, y=job_title_counts.values,
             labels={'x': "ุงููุธููุฉ", 'y': "ุนุฏุฏ ุงููุธุงุฆู"})
fig.update_layout(title="ุงููุธุงุฆู ุงูุฃูุซุฑ ุทูุจุงู ูู ุณูู ุงูุนูู", title_x=0.45)

# Display the chart
st.plotly_chart(fig)


# End of analysis
st.header("๐ ููุงูุฉ ุงูุชุญููู")
st.write("ู ุจูุฐุง ุฎูุตูุง ุงุณุชุนุฑุงุถ ุฃุจุฑุฒ ุงูุฃุณุฆูุฉ ุงููู ูุงุฌูุชูุง ูู ุชุญููู ุณูู ุงูุนูู ุงูุณุนูุฏู. ุฅู ุดุงุก ุงููู ุชููููุง ุงุณุชูุฏุชูุง ูู ูุงููุนูููุงุชุ ูุญูููู ูุนูู ุฏุงูููุง ูุฃู ุงุณุชูุณุงุฑ ุซุงูู")
